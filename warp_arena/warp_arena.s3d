/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include "warp_player.s3d"
#include "warp_level.s3d"

/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.5;
SET SCENE_FAR  = 1000;

/* Light globals */
var Light0;
var PosL = [0, 16.0, 0];	// default light position
var Light1;
var PosL1 = [0, 16.0, 43];	// default light position
var Light2;
var PosL2 = [202, 16.0, 0];	// default light position
var Light3;
var PosL3 = [202, 16, 43];	// default light position

var mylevel;

var myplayer;
var mystatus;

/* Function declarations */
function CameraMoveMouse();

function OnDownload()
{
	// TODO: download your resources here
	// E.g.: FileDownload("resource.ext");
	FileDownload("XVRResources.zip");
}

function OnInit(params)
{
	obstacle_array = array(0);
	/* initialize camera */
	CameraGetCurrent().SetPosition(CamPos);

	/* initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();	
	
	
	Light1 = CVmLight();
	Light1.SetPosition(PosL1);
	Light1.SetDiffuse(10, 10, 10);
	Light1.Enable();
	
	Light2 = CVmLight();
	Light2.SetPosition(PosL2);
	Light2.SetDiffuse(1, 1, 1);
	Light2.Enable();	
	
	
	Light3 = CVmLight();
	Light3.SetPosition(PosL3);
	Light3.SetDiffuse(10, 10, 10);
	Light3.Enable();

	// TODO: put your initialization code here
	mylevel = level();
	mylevel.init("level.txt");
	
	
	myplayer = player();
	myplayer.init([1, 1, 1], obstacle_array);
	myplayer.setposition([myPosX, myPosY, myPosZ]);
	
	mystatus = status();
	mystatus.init();
}

function OnFrame()
{ 
	SceneBegin();
	myplayer.shot_cnt = (myplayer.shot_cnt+1)%min_shot;
	if (myplayer.has_shot && (myplayer.shot_cnt == 0))
		myplayer.has_shot = false;
	/* manage camera */
	CameraMoveMouse();

	myplayer.update();
	mystatus.update(myplayer.view, myplayer.curr_weapon, myplayer.myWeapon.n_bullets_rg);	
	mylevel.draw();
	if (myplayer.view == 0)
	{
		myplayer.lower_obj.hide();
		myplayer.upper_obj.hide();
	}
	else
	{
		myplayer.lower_obj.unhide();
		myplayer.upper_obj.unhide();
	}
	myplayer.draw();
	SceneEnd();
}

function DownloadReady(RequestID)
{
	// TODO
}

function OnTimer()
{
	// TODO:
}


function OnEvent(eventID, wparam, lparam){
	// TODO: put your events handling code here
}

function OnError(){
	// TODO: put your errors handling code here
}


function OnExit()
{
	// TODO: put your cleanup code here
}



// Camera manager (using mouse)
function CameraMoveMouse()
{
	CameraMoveMouse_MBL_LC();
}