#include "warp_weapons.s3d"

#define healthX 	0.0
#define healthY  	0.02
#define healthDimX 1
#define healthDimY 0.02
#define spacing    0.02
#define lifex 		0.033
#define lifey		0.17
#define ammox		0.16
#define ammoy		lifey
#define numammox   0.17
#define numammoy   0.072

class status
{	
	var window;
	var w_size;
	var life;
	var myWeapon;
	var heal_fg;
	var curr_life;
	
	init();
	update(view, w_type, n_bullets);
	draw(view, w_type, n_bullets);
	recharge(type);
	heal();
};

function status::init()
{
	life = 0.4;
	heal_fg = 0;
	curr_life = life;
	
	window = CVmWebBrowser();
	w_size = window.GetSize();
	w_size.x /= 1723;
	w_size.y /= 1043;
	draw(1, 0, 10);
}

//hit = 0 if the player has not been shot, 0.1 if shot with gun, 0.5 if shot with railgun
function status::update(view, w_type, n_bullets)
{
	w_size = window.GetSize();
	w_size.x /= 1723;
	w_size.y /= 1043;
	heal();
	draw(view, w_type, n_bullets);
}

function status::draw(view, w_type, n_bullets)
{
	//status bar background
	ConsoleColor(0.0, 0.0, 0.0, 0.6);
	ConsoleFilledRect(w_size.x * 0.0, w_size.y * 0.1, w_size.x * 0.2, w_size.y * 0.1);
	switch (w_type)
	{
		case 0:
			ConsoleColor(0.6, 0.0, 0.0, 1.0);
			ConsoleFilledRect(w_size.x * 0.005, w_size.y * 0.09, w_size.x * 0.188, w_size.y * 0.06);
			ConsoleColor(1.0, 0.8, 0.1, 1.0);
   			ConsoleFont("Calibri", int(sqrt(w_size.x^2 * w_size.y^2) * 35));
			ConsoleText(w_size.x * 0.045, w_size.y * 0.043, "GUN: 99");
			break;
			
		case 1:
			ConsoleColor(0.5, 0.55, 0.4, 1.0);
			ConsoleFilledRect(w_size.x * 0.005, w_size.y * 0.09, w_size.x * 0.188, w_size.y * 0.06);
			ConsoleColor(1.0, 0.8, 0.1, 1.0);
   			ConsoleFont("Calibri", int(sqrt(w_size.x^2 * w_size.y^2) * 35));
			ConsoleText(w_size.x * 0.02, w_size.y * 0.043, "RAILGUN: "+str(n_bullets));
			break;
			
		
	}
	//target (zero for first person, the other for third)
	if (view == 1)
	{
		ConsoleColor(1.0, 0.0, 0.0, 1.0);
		ConsoleFont("Arial", 10);
		ConsoleText(0.5, 0.8, "o");
	}
	else 
	{
		ConsoleColor(1.0, 0.0, 0.0, 1.0);
		ConsoleFont("Arial", 10);
		ConsoleText(0.5, 0.55, "o");
	}
	//Status regarding players life
	ConsoleColor(0.0, 0.0, 0.0, 0.6);
	ConsoleFilledRect(healthX, healthY, healthDimX, healthDimY);
	ConsoleColor(0.6, 0.0, 0.0, 1.0);
	ConsoleFilledRect(healthX, healthY, life, healthDimY);
	ConsoleColor(1.0, 1.0, 1.0, 1.0);
   	ConsoleFont("Calibri", sqrt(w_size.x^2+w_size.y^2) * 10);
	ConsoleText(0.5, 0.005, "L  I  F  E");
}

function status::recharge(type)
{
	switch (type)
	{
		case 0 :
			heal_fg = 1;
			curr_life = life + 0.5;
			break;
		
		case 1 :
			myWeapon.n_bullets_rg = 10;
			break;
	}
}

function status::heal()
{
	if ((heal_fg == 1) && (life < curr_life))
		life += 0.01;
	else
		heal_fg = 0;
}